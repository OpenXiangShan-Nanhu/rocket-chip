#--------------------------------------------------------------------
# Sources
#--------------------------------------------------------------------

# Verilog sources

bb_vsrcs = \
	$(base_dir)/ivlsrc/plusarg_reader.v \
	$(base_dir)/ivlsrc/ClockDivider2.v \
	$(base_dir)/ivlsrc/ClockDivider3.v \
	$(base_dir)/ivlsrc/AsyncResetReg.v \

sim_vsrcs = \
	$(generated_dir)/$(long_name).v \
	$(generated_dir)/$(long_name).behav_srams.v \
	$(base_dir)/ivlsrc/$(TB).v \
	$(base_dir)/ivlsrc/SimDTM.v \
    $(base_dir)/ivlsrc/SimJTAG.v \
	$(bb_vsrcs)

# C sources

sim_csrcs = \
    $(base_dir)/ivlsrc/vpi_register.cc \
	$(base_dir)/ivlsrc/SimDTM.cc \
    $(base_dir)/ivlsrc/SimJTAG.cc \
    $(base_dir)/ivlsrc/remote_bitbang.cc \

#--------------------------------------------------------------------
# Build Verilog
#--------------------------------------------------------------------
verilog: $(sim_vsrcs)

.PHONY: verilog

#--------------------------------------------------------------------
# Build rules
#--------------------------------------------------------------------


CXX = g++

CXX_OPTS = \
	-I/usr/local/include/iverilog \
	-I$(RISCV)/include \
	-std=c++11 \
	-Wl,-rpath,$(RISCV)/lib \
    -Wl,--no-as-needed \
    -L$(RISCV)/lib -lvpi -lveriuser -lfesvr -lpthread \
    -fPIC -shared \

IVL = iverilog

IVL_OPTS = \
	-g2005-sv \
    -c timescale \
    -s $(TB) \
    -y $(generated_dir) -Y .v\
	-DCLOCK_PERIOD=1.0 \
	-DPRINTF_COND=$(TB).printf_cond \
	-DSTOP_COND=\!$(TB).reset \
	-DRANDOMIZE_MEM_INIT \
	-DRANDOMIZE_REG_INIT \
	-DRANDOMIZE_GARBAGE_ASSIGN \
	-DRANDOMIZE_INVALID_ASSIGN \


#--------------------------------------------------------------------
# Build the simulator
#--------------------------------------------------------------------

simv = $(sim_dir)/simv-$(PROJECT)-$(CONFIG)
$(simv) : $(sim_vsrcs) $(sim_csrcs)
	cd $(sim_dir) && \
	rm -rf csrc && \
    $(CXX) $(CXX_OPTS) $(sim_csrcs) -o $(simv).vpi && \
    $(IVL) $(IVL_OPTS) -o $(simv) $(sim_vsrcs) \

simv_debug = $(sim_dir)/simv-$(PROJECT)-$(CONFIG)-debug
$(simv_debug) : $(sim_vsrcs) $(sim_csrcs)
	cd $(sim_dir) && \
	rm -rf csrc && \
    $(CXX) $(CXX_OPTS) $(sim_csrcs) -o $(simv).vpi && \
	$(IVL) $(IVL_OPTS) -o $(simv_debug) $(sim_vsrcs) -DDEBUG \

#--------------------------------------------------------------------
# Run
#--------------------------------------------------------------------

seed = $(shell date +%s)
exec_simv = vvp -M. -msimv-$(PROJECT)-$(CONFIG) $(simv) 
exec_simv_debug = vvp -M. -msimv-$(PROJECT)-$(CONFIG) $(simv_debug)
